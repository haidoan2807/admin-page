{"version":3,"file":"static/js/4376.8d925753.chunk.js","mappings":"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","sources":["assets/icons/x.svg","views/pages/pos-management/poslist/index.js","views/pages/pos-management/transaction/index.js","views/pages/pos-management/components/create-pos.js","views/pages/pos-management/index.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgX(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 16,\n    viewBox: \"0 0 14 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.1127 8L13.7523 1.27754C13.8469 1.16582 13.7674 0.996094 13.6213 0.996094H11.9068C11.8059 0.996094 11.7092 1.04121 11.6426 1.11855L6.99121 6.66367L2.33985 1.11855C2.27539 1.04121 2.17871 0.996094 2.07559 0.996094H0.361134C0.21504 0.996094 0.135548 1.16582 0.230079 1.27754L5.86973 8L0.230079 14.7225C0.208903 14.7474 0.195318 14.7778 0.190936 14.8102C0.186554 14.8426 0.191559 14.8756 0.205358 14.9052C0.219157 14.9348 0.241169 14.9599 0.268781 14.9774C0.296394 14.9949 0.328446 15.0041 0.361134 15.0039H2.07559C2.17656 15.0039 2.27324 14.9588 2.33985 14.8814L6.99121 9.33633L11.6426 14.8814C11.707 14.9588 11.8037 15.0039 11.9068 15.0039H13.6213C13.7674 15.0039 13.8469 14.8342 13.7523 14.7225L8.1127 8Z\",\n    fill: \"#0666AB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.b19894bb272a44746105065e59a204ad.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport { CButton, CFormInput, CInputGroup } from '@coreui/react'\nimport CustomButton from 'src/components/custombutton'\nimport makeAnimated from 'react-select/animated'\nimport CustomSelectInput from 'src/components/customselectinput'\nimport styled from 'styled-components'\nimport { CustomTable } from 'src/components'\nimport TrashIcon from 'src/assets/icons/trash.svg'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport XIcon from 'src/assets/icons/x.svg'\n\nconst animatedComponents = makeAnimated()\n\nconst POSContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 11px;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  margin: 12px;\n\n  @media only screen and (max-width: 992px) {\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n`\n\nconst InputSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n\n  @media only screen and (max-width: 992px) {\n    margin-top: 0px;\n  }\n`\n\nconst POSList = () => {\n  const [options, setOptions] = useState([\n    {\n      value: 0,\n      label: 'Expire',\n    },\n    {\n      value: 1,\n      label: 'Active',\n    },\n  ])\n\n  const tableData = {\n    columns: [\n      {\n        name: 'ID',\n        selector: 'Id',\n        sortable: true,\n      },\n      {\n        name: 'Type',\n        selector: 'type',\n        sortable: true,\n      },\n      {\n        name: 'Store',\n        selector: 'store',\n        sortable: true,\n      },\n      {\n        name: 'Campaign ID',\n        selector: 'campaign-id',\n        sortable: true,\n      },\n      {\n        name: 'Campaign',\n        selector: 'campaign',\n        sortable: true,\n      },\n      {\n        name: 'Connection Status',\n        selector: 'connection-status',\n        sortable: true,\n        render: (col, obj) => {\n          return obj.status ? <div>True</div> : <div>False</div>\n        },\n      },\n      {\n        name: <div className=\"text-center\">Status</div>,\n        selector: 'status',\n        sortable: true,\n        render: (col, obj) => {\n          return obj.status ? <div>True</div> : <div>False</div>\n        },\n      },\n      {\n        name: <div className=\"text-center w-100\">Action</div>,\n        selector: 'action',\n        render: (col, obj) => {\n          return (\n            <div className=\"d-flex flex-row justify-content-center\">\n              <CustomButton color=\"main\">\n                {obj.active ? (\n                  <FontAwesomeIcon icon={faCheck} onClick={() => {}} />\n                ) : (\n                  <img src={XIcon} />\n                )}\n              </CustomButton>\n              <CustomButton color=\"main\">\n                <img src={TrashIcon} onClick={() => {}} />\n              </CustomButton>\n            </div>\n          )\n        },\n      },\n    ],\n    data: [\n      {\n        id: 1,\n        Id: '499',\n        type: 'Xero',\n        store: 'HUPER',\n        'campaign-id': '629',\n        campaign: 'HUPER 2022',\n        'connection-status': true,\n        status: true,\n        active: true,\n      },\n      {\n        id: 2,\n        Id: '500',\n        type: 'Way',\n        store: 'HUPER1',\n        'campaign-id': '630',\n        campaign: 'HUPER 2023',\n        'connection-status': false,\n        status: false,\n        active: false,\n      },\n    ],\n  }\n\n  return (\n    <>\n      <POSContainer>\n        <CInputGroup>\n          <CFormInput type=\"text\" placeholder=\"Search POS\" style={{ fontSize: '14px' }} />\n          <CButton type=\"button\" color=\"secondary\" variant=\"outline\" id=\"search\">\n            <FontAwesomeIcon icon={faSearch} />\n          </CButton>\n        </CInputGroup>\n\n        <InputSection>\n          <CustomSelectInput\n            closeMenuOnSelect={true}\n            components={animatedComponents}\n            // defaultValue={options}\n            options={options}\n            placeholder=\"Select campaign\"\n          />\n        </InputSection>\n\n        <InputSection>\n          <CustomSelectInput\n            closeMenuOnSelect={true}\n            components={animatedComponents}\n            // defaultValue={options}\n            options={options}\n            placeholder=\"Select status\"\n          />\n        </InputSection>\n\n        <ButtonGroup>\n          <CustomButton color=\"primary\" onClick={() => {}}>\n            Apply\n          </CustomButton>\n          <CustomButton\n            color=\"link\"\n            style={{ marginLeft: '5px', textDecoration: 'none' }}\n            onClick={() => {}}\n          >\n            Reset\n          </CustomButton>\n        </ButtonGroup>\n      </POSContainer>\n\n      <p style={{ color: '#959292', fontSize: '14px', margin: '6px 12px' }}>\n        Summary: This list shows the Point-of-Sale connections which have an active status.\n      </p>\n\n      {tableData.data.length > 0 ? (\n        <CustomTable data={tableData.data} columns={tableData.columns} pagination={false} />\n      ) : (\n        <p className=\"text-center my-4\">There are no records to display</p>\n      )}\n    </>\n  )\n}\n\nexport default POSList\n","import React from 'react'\nimport { CFormInput, CInputGroup } from '@coreui/react'\nimport styled from 'styled-components'\nimport CustomButton from 'src/components/custombutton'\nimport { CustomTable } from 'src/components'\n\nconst FormDate = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 11px;\n  align-items: center;\n`\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n\n  @media only screen and (max-width: 768px) {\n    margin-top: 0px;\n    margin-bottom: 10px;\n  }\n`\n\nconst FormInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 16px;\n  margin: 12px;\n  width: 100%;\n  gap: 11px;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: start;\n  }\n`\n\nconst Transaction = () => {\n  const tableData = {\n    columns: [\n      {\n        name: 'ID',\n        selector: 'Id',\n        sortable: true,\n      },\n      {\n        name: 'POS ID',\n        selector: 'pos-id',\n        sortable: true,\n      },\n      {\n        name: 'Campain ID',\n        selector: 'campain-id',\n        sortable: true,\n      },\n      {\n        name: 'Campain Name',\n        selector: 'campain-name',\n        sortable: true,\n      },\n      {\n        name: 'Transaction ID',\n        selector: 'transaction-id',\n        sortable: true,\n      },\n      {\n        name: 'Status',\n        selector: 'status',\n        sortable: true,\n      },\n      {\n        name: 'Created Date',\n        selector: 'created-date',\n        sortable: true,\n      },\n    ],\n    data: [\n      {\n        id: 1,\n        Id: '22507',\n        'pos-id': '499',\n        'campain-id':'ABC123',\n        'campain-name':'Campaint A',\n        'transaction-id':'trans A',\n        status: 'Updated',\n        'created-date': 'Jan 23, 2022 17:19:19 +0700',\n      },\n      {\n        id: 2,\n        Id: '22505',\n        'pos-id': '499',\n        'campain-id':'ABC123',\n        'campain-name':'Campaint A',\n        'transaction-id':'trans A',\n        status: 'track sale created',\n        'created-date': 'Jan 24, 2022 17:19:19 +0700',\n      },\n    ],\n  }\n\n  return (\n    <>\n      <FormInput>\n        <FormDate>\n          <span className=\"text-nowrap\" style={{ fontSize: '14px' }}>\n            Created Date\n          </span>\n          <CInputGroup>\n            <CFormInput type=\"date\" id=\"created-date\" onChange={() => {}} />\n          </CInputGroup>\n        </FormDate>\n        <ButtonGroup>\n          <CustomButton color=\"primary\">Apply</CustomButton>\n          <CustomButton\n            color=\"link\"\n            style={{ marginLeft: '5px', textDecoration: 'none' }}\n            onClick={() => {}}\n          >\n            Reset\n          </CustomButton>\n        </ButtonGroup>\n      </FormInput>\n\n      {tableData.data.length > 0 ? (\n        <CustomTable data={tableData.data} columns={tableData.columns} pagination={false} />\n      ) : (\n        <p className=\"text-center my-4\">There are no records to display</p>\n      )}\n    </>\n  )\n}\n\nexport default Transaction\n","import React, { useState } from 'react'\nimport {\n  CFormLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport CustomButton from 'src/components/custombutton'\nimport CustomSelectInput from 'src/components/customselectinput'\nimport makeAnimated from 'react-select/animated'\n\nconst animatedComponents = makeAnimated()\n\nconst CreatePOS = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show } = { ...props }\n  const [visible, setVisible] = useState(show)\n  const [options, setOptions] = useState([\n    {\n      value: 0,\n      label: 'Vend',\n    },\n    {\n      value: 1,\n      label: 'Kounta',\n    },\n  ])\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>Create New POS</CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{ fontSize: '14px' }}>\n        <CFormLabel>Required Information</CFormLabel>\n        <div className=\"mb-3\">\n          <CFormLabel>Type of POS</CFormLabel>\n          <CustomSelectInput\n            closeMenuOnSelect={true}\n            components={animatedComponents}\n            options={options}\n            placeholder=\"Type of POS\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <CFormLabel>Campaign Name</CFormLabel>\n          <CustomSelectInput\n            closeMenuOnSelect={true}\n            components={animatedComponents}\n            options={options}\n            placeholder=\"Select campaign name\"\n          />\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Cancel\n        </CustomButton>\n        <CustomButton color=\"primary\">Create</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default CreatePOS\n","import React, { useState } from 'react'\nimport { CNav, CNavItem, CNavLink } from '@coreui/react'\nimport CustomButton from 'src/components/custombutton'\nimport styled from 'styled-components'\nimport POSList from './poslist'\nimport Transaction from './transaction'\nimport CreatePOS from './components/create-pos'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst CustomNav = styled(CNav)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n\n  @media only screen and (max-width: 576px) {\n    flex-direction: column;\n  }\n`\n\nconst ButtonGroup = styled.div`\n  margin-right: 16px;\n\n  @media only screen and (max-width: 576px) {\n    margin: 16px 0px 16px 16px;\n  }\n`\n\nconst POSManagement = () => {\n  const [activeTab, setActiveTab] = useState('poslist')\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab)\n  }\n\n  return (\n    <>\n      <div className=\"d-flex flex-column bg-white mb-2\">\n        <CustomNav variant=\"tabs\" role=\"tablist\" className=\"border-secondary my-2\">\n          <div className=\"d-flex flex-row align-items-center\">\n            <CNavItem>\n              <CNavLink\n                active={activeTab === 'poslist'}\n                style={{ cursor: 'pointer' }}\n                onClick={() => toggle('poslist')}\n                className={`border-0 ${\n                  activeTab === 'poslist'\n                    ? 'text-primary border-bottom border-primary'\n                    : 'text-dark border-bottom border-secondary'\n                }`}\n              >\n                POS List\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink\n                active={activeTab === 'transaction'}\n                style={{ cursor: 'pointer' }}\n                onClick={() => toggle('transaction')}\n                className={`border-0 ${\n                  activeTab === 'transaction'\n                    ? 'text-primary border-bottom border-primary'\n                    : 'text-dark border-bottom border-secondary'\n                }`}\n              >\n                Track Transaction\n              </CNavLink>\n            </CNavItem>\n          </div>\n          <ButtonGroup>\n            <CustomButton\n              color=\"primary\"\n              className=\"py-1\"\n              onClick={() => CreatePOS({ show: true })}\n            >\n              <FontAwesomeIcon icon={faPlus} className=\"me-1\" />\n              Create POS\n            </CustomButton>\n          </ButtonGroup>\n        </CustomNav>\n\n        {activeTab === 'poslist' ? <POSList /> : <Transaction />}\n      </div>\n    </>\n  )\n}\n\nexport default POSManagement\n"],"names":["animatedComponents","makeAnimated","POSContainer","styled","div","_templateObject","_taggedTemplateLiteral","InputSection","_templateObject2","ButtonGroup","_templateObject3","POSList","options","setOptions","useState","value","label","tableData","columns","name","selector","sortable","render","col","obj","status","_jsx","children","className","_jsxs","CustomButton","color","active","FontAwesomeIcon","icon","faCheck","onClick","src","XIcon","TrashIcon","data","id","Id","type","store","campaign","_Fragment","CInputGroup","CFormInput","placeholder","style","fontSize","CButton","variant","faSearch","CustomSelectInput","closeMenuOnSelect","components","marginLeft","textDecoration","margin","length","CustomTable","pagination","FormDate","FormInput","Transaction","onChange","DialogContent","props","show","visible","setVisible","CModal","onClose","CModalHeader","CModalTitle","CModalBody","CFormLabel","CModalFooter","Promise","resolve","el","document","createElement","onExit","result","unmountComponentAtNode","CustomNav","CNav","POSManagement","activeTab","setActiveTab","toggle","tab","role","CNavItem","CNavLink","cursor","concat","CreatePOS","faPlus"],"sourceRoot":""}