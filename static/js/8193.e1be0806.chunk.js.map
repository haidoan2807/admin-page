{"version":3,"file":"static/js/8193.e1be0806.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js"],"sourcesContent":["import React, { lazy, useEffect } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\nimport { useAuth } from 'src/utils/auth-provider.js'\nimport { useHistory } from 'react-router-dom'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const { user } = useAuth()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!user) history.push('/login')\n  }, [])\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["WidgetsDropdown","lazy","WidgetsBrand","Dashboard","random","min","max","Math","floor","user","useAuth","history","useHistory","useEffect","push","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","name","new","registered","country","flag","cifUs","usage","period","color","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","_jsxs","_Fragment","children","_jsx","CCard","className","CCardBody","CRow","CCol","sm","id","CButton","CIcon","cilCloudDownload","CButtonGroup","map","active","CChartLine","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","CCardFooter","xs","cols","md","item","index","CProgress","thin","withCharts","CCardHeader","xl","value1","value2","size","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar"],"sourceRoot":""}