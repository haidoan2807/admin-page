{"version":3,"file":"static/js/8967.40a27793.chunk.js","mappings":"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","sources":["components/formdateinput/index.js","views/pages/package-management/components/priority.js","views/pages/package-management/components/schedule.js","views/pages/package-management/index.js"],"sourcesContent":["import { CFormInput, CInputGroup } from '@coreui/react'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst FormInputContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  ${(props) =>\n    props.user &&\n    css`\n      width: 100%;\n    `}\n\n  @media only screen and (max-width: 576px) {\n    flex-direction: column;\n  }\n`\n\nconst FormDateInput = ({ ...props }) => {\n  return (\n    <FormInputContainer {...props}>\n      <CInputGroup>\n        <CFormInput type=\"date\" id=\"start-date\" onChange={() => {}} />\n      </CInputGroup>\n      <span className=\"mx-2\" style={{ fontSize: '14px', color: '#CAC2C2' }}>\n        to\n      </span>\n      <CInputGroup>\n        <CFormInput type=\"date\" id=\"end-date\" onChange={() => {}} />\n      </CInputGroup>\n    </FormInputContainer>\n  )\n}\n\nexport default FormDateInput\n","import React, { useState } from 'react'\nimport { CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport { CustomTable } from 'src/components'\nimport CustomButton from '../../../../components/custombutton'\n\nconst Priority = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show, dataTest } = { ...props }\n  const { data, columns } = dataTest\n  const [visible, setVisible] = useState(show)\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)} size=\"lg\">\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>\n          Setting Schedule Priority\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{ fontSize: '14px' }}>\n        <CRow>\n          <CustomTable data={data} columns={columns} pagination={false} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Close\n        </CustomButton>\n        <CustomButton color=\"primary\">Update</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default Priority\n","import React, { useState } from 'react'\nimport {\n  CCol,\n  CFormCheck,\n  CFormLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport CustomButton from '../../../../components/custombutton'\nimport makeAnimated from 'react-select/animated'\nimport CustomSelectInput from 'src/components/customselectinput'\nimport FormDateInput from 'src/components/formdateinput'\n\nconst animatedComponents = makeAnimated()\n\nconst Scheduler = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show } = { ...props }\n  const [visible, setVisible] = useState(show)\n  const [options, setOptions] = useState([\n    {\n      value: 0,\n      label: 'Package 1',\n    },\n    {\n      value: 1,\n      label: 'Package 2',\n    },\n  ])\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>\n          Setting Schedule for Special Package\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{ fontSize: '14px' }}>\n        <CRow>\n          <CFormLabel>Special Package</CFormLabel>\n          <CustomSelectInput\n            closeMenuOnSelect={true}\n            components={animatedComponents}\n            // defaultValue={options}\n            options={options}\n            placeholder=\"Select special package\"\n            className=\"mb-3\"\n          />\n        </CRow>\n        <CRow>\n          <CFormLabel>Schedule Valid</CFormLabel>\n          <FormDateInput className=\"mb-3\" />\n        </CRow>\n        <CRow>\n          <CCol>\n            <div style={{ fontSize: '14px' }}>\n              <CFormCheck id=\"enable\" label=\"Enable\" onClick={() => {}} />\n            </div>\n          </CCol>\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Close\n        </CustomButton>\n        <CustomButton color=\"primary\">Update</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default Scheduler\n","import React from 'react'\nimport { CustomTable } from 'src/components'\nimport { CFormInput, CInputGroup } from '@coreui/react'\nimport CustomButton from 'src/components/custombutton'\nimport Priority from './components/priority'\nimport Scheduler from './components/schedule'\nimport EditIcon from 'src/assets/icons/edit.svg'\n\nconst PackageManagement = () => {\n  const tableData = {\n    columns: [\n      {\n        name: <div>No.</div>,\n        selector: 'no',\n      },\n      {\n        name: 'Setting Name',\n        selector: 'setting-name',\n      },\n      {\n        name: <div className=\"text-center w-100\">Action</div>,\n        selector: 'action',\n        render: (col, obj) => {\n          if (obj['id'] === 1) {\n            return (\n              <div className=\"text-center\">\n                <CustomButton color=\"main\" onClick={() => Scheduler({ show: true })}>\n                  <img src={EditIcon} />\n                </CustomButton>\n              </div>\n            )\n          } else if (obj['id'] === 2) {\n            return (\n              <div className=\"text-center\">\n                <CustomButton\n                  color=\"main\"\n                  onClick={() => Priority({ show: true, dataTest: dataTest })}\n                >\n                  <img src={EditIcon} />\n                </CustomButton>\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"text-center\">\n                <CustomButton color=\"main\" onClick={() => {}}>\n                  <img src={EditIcon} />\n                </CustomButton>\n              </div>\n            )\n          }\n        },\n      },\n    ],\n    data: [\n      {\n        id: 1,\n        no: <div>1</div>,\n        'setting-name': 'Setting Schedule for Special Package',\n      },\n      {\n        id: 2,\n        no: <div>2</div>,\n        'setting-name': 'Package Priority',\n      },\n      {\n        id: 3,\n        no: <div>3</div>,\n        'setting-name': 'Package Access Control',\n      },\n    ],\n  }\n\n  const dataTest = {\n    columns: [\n      { name: 'No', selector: 'no' },\n      { name: 'Package', selector: 'package' },\n      {\n        name: 'Priority',\n        selector: 'priority',\n        render: (col, obj) => (\n          <CInputGroup size=\"sm\">\n            <CFormInput type=\"text\" onChange={() => {}} />\n          </CInputGroup>\n        ),\n      },\n    ],\n    data: [\n      {\n        id: 1,\n        no: 1,\n        package: 'Covid-19 Special Offers',\n      },\n      {\n        id: 2,\n        no: 2,\n        package: 'D.I.Y (Do It Yourself)',\n      },\n      {\n        id: 3,\n        no: 3,\n        package: 'Free Trial',\n      },\n      {\n        id: 4,\n        no: 4,\n        package: 'Guidance',\n      },\n    ],\n  }\n\n  return <CustomTable columns={tableData.columns} data={tableData.data} pagination={false} />\n}\n\nexport default PackageManagement\n"],"names":["FormInputContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","user","css","_templateObject2","_ref","_jsxs","children","_jsx","CInputGroup","CFormInput","type","id","onChange","className","style","fontSize","color","DialogContent","show","dataTest","data","columns","visible","setVisible","useState","CModal","onClose","size","CModalHeader","CModalTitle","CModalBody","CRow","CustomTable","pagination","CModalFooter","CustomButton","onClick","Promise","resolve","el","document","createElement","render","onExit","result","unmountComponentAtNode","animatedComponents","makeAnimated","options","setOptions","value","label","CFormLabel","CustomSelectInput","closeMenuOnSelect","components","placeholder","FormDateInput","CCol","CFormCheck","PackageManagement","tableData","name","selector","col","obj","Scheduler","src","EditIcon","Priority","no","package"],"sourceRoot":""}