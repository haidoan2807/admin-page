{"version":3,"file":"static/js/5630.082d57a4.chunk.js","mappings":"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","sources":["views/pages/subcription-management/components/edit-subscription.js","../node_modules/@coreui/icons/js/free/cil-check-alt.js","../node_modules/@coreui/icons/js/free/cil-x.js","views/pages/subcription-management/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCol,\n  CFormCheck,\n  CFormInput,\n  CFormLabel,\n  CInputGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport CustomButton from '../../../../components/custombutton'\n\nconst EditSubscription = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show } = { ...props }\n  const [visible, setVisible] = useState(show)\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)} size=\"lg\">\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>Edit Subscription</CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{ fontSize: '14px' }}>\n        <CFormLabel style={{ color: '#000000' }}>Required Information</CFormLabel>\n        <CRow>\n          <CCol>\n            <CFormLabel>Subscription Name</CFormLabel>\n            <CInputGroup style={{ marginBottom: '32px' }} size=\"sm\">\n              <CFormInput\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Input subscription name\"\n                onChange={() => {}}\n                value=\"D.I.Y (Do It Yourself)\"\n              />\n            </CInputGroup>\n\n            <CFormLabel>Monthly Price</CFormLabel>\n            <CInputGroup className=\"mb-3\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"monthly-price\"\n                min=\"0\"\n                placeholder=\"Input monthly price\"\n                onChange={() => {}}\n                value=\"0.50\"\n              />\n            </CInputGroup>\n\n            <CFormCheck\n              id=\"checkMonthly\"\n              className=\"mb-3\"\n              label=\"Disable Monthly\"\n              onChange={() => {}}\n            />\n\n            <CFormCheck\n              id=\"checkAnnually\"\n              className=\"mb-3\"\n              label=\"Disable Annually\"\n              onChange={() => {}}\n            />\n          </CCol>\n          <CCol>\n            <CFormLabel>No. of Campaigns</CFormLabel>\n            <CInputGroup className=\"mb-1\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"no-of-campaigns\"\n                min=\"0\"\n                placeholder=\"Input number of campaigns\"\n                onChange={() => {}}\n                value=\"10\"\n              />\n            </CInputGroup>\n\n            <CFormCheck\n              id=\"checkUnlimited\"\n              className=\"mb-1\"\n              label=\"Unlimited\"\n              onChange={() => {}}\n            />\n\n            <CFormLabel>Annual Price</CFormLabel>\n            <CInputGroup className=\"mb-3\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"annual-price\"\n                min=\"0\"\n                placeholder=\"Input annual price\"\n                onChange={() => {}}\n                value=\"15.00\"\n              />\n            </CInputGroup>\n\n            <CFormCheck id=\"checkTrial\" className=\"mb-3\" label=\"Allow Trial\" onChange={() => {}} />\n\n            <CFormCheck\n              id=\"checkPackage\"\n              className=\"mb-3\"\n              label=\"Allow Special Package\"\n              onChange={() => {}}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <div className=\"d-flex flex-row\">\n            <span className=\"me-4\">Status</span>\n            <CFormCheck\n              type=\"radio\"\n              name=\"checkRadio\"\n              id=\"checkActive\"\n              label=\"Active\"\n              defaultChecked\n              className=\"me-3\"\n              onChange={() => {}}\n            />\n            <CFormCheck\n              type=\"radio\"\n              name=\"checkRadio\"\n              id=\"checkInactive\"\n              label=\"Inactive\"\n              onChange={() => {}}\n            />\n          </div>\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Close\n        </CustomButton>\n        <CustomButton color=\"primary\">Update</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default EditSubscription\n","export const cilCheckAlt = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='200.359 382.269 61.057 251.673 82.943 228.327 199.641 337.731 428.686 108.687 451.314 131.313 200.359 382.269' class='ci-primary'/>\"]","export const cilX = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"]","import React from 'react'\nimport { CustomTable } from 'src/components'\nimport CIcon from '@coreui/icons-react'\nimport { cilCheckAlt, cilX } from '@coreui/icons'\nimport CustomButton from 'src/components/custombutton'\nimport EditSubscription from 'src/views/pages/subcription-management/components/edit-subscription'\nimport TrashIcon from 'src/assets/icons/trash.svg'\nimport EditIcon from 'src/assets/icons/edit.svg'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\n\nconst SubscriptionManagement = () => {\n  const SubscriptionHeader = React.lazy(() => import('./components/header'))\n\n  const tableData = {\n    columns: [\n      {\n        name: 'Subscription Name',\n        selector: 'subscription-name',\n        sortable: true,\n      },\n      {\n        name: 'Monthly Price',\n        selector: 'monthly-price',\n        sortable: true,\n      },\n      {\n        name: <div className=\"text-center\">Annual Price</div>,\n        selector: 'annual-price',\n        sortable: true,\n      },\n      {\n        name: <div className=\"text-center\">No. of Campaigns</div>,\n        selector: 'campaigns',\n        sortable: true,\n      },\n      {\n        name: <div className=\"text-center\">Trial</div>,\n        selector: 'trials',\n        sortable: true,\n        render: (col, obj) => {\n          return obj.trials ? (\n            <div className=\"text-center\">\n              <CustomButton color=\"main\" onClick={() => {}}>\n                <CIcon icon={cilCheckAlt} style={{ color: '#1B8512' }} size=\"lg\" />\n              </CustomButton>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <CustomButton color=\"main\" onClick={() => {}}>\n                <CIcon icon={cilX} style={{ color: '#FE1717' }} size=\"lg\" />\n              </CustomButton>\n            </div>\n          )\n        },\n      },\n      {\n        name: <div className=\"text-center\">Special</div>,\n        selector: 'special',\n        sortable: true,\n        render: (col, obj) => {\n          return obj.special ? (\n            <div className=\"text-center\">\n              <CustomButton color=\"main\" onClick={() => {}}>\n                <CIcon icon={cilCheckAlt} style={{ color: '#1B8512' }} size=\"lg\" />\n              </CustomButton>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <CustomButton color=\"main\" onClick={() => {}}>\n                <CIcon icon={cilX} style={{ color: '#FE1717' }} size=\"lg\" />\n              </CustomButton>\n            </div>\n          )\n        },\n      },\n      {\n        name: <div className=\"text-center\">Status</div>,\n        selector: 'status',\n        sortable: true,\n        render: (col, obj) => {\n          return obj.status ? (\n            <div className=\"text-center\">Active</div>\n          ) : (\n            <div className=\"text-center\">Expired</div>\n          )\n        },\n      },\n      {\n        name: <div className=\"text-center w-100\">Action</div>,\n        selector: 'action',\n        render: (col) => (\n          <div className=\"d-flex flex-row justify-content-center\">\n            <CustomButton color=\"main\" onClick={() => {}}>\n              <FontAwesomeIcon icon={faBan} size=\"lg\" className=\"mt-1\" />\n            </CustomButton>\n            <CustomButton\n              color=\"main\"\n              onClick={() =>\n                EditSubscription({\n                  show: true,\n                })\n              }\n            >\n              <img src={EditIcon} />\n            </CustomButton>\n            <CustomButton color=\"main\">\n              <img src={TrashIcon} onClick={() => {}} />\n            </CustomButton>\n          </div>\n        ),\n      },\n    ],\n    data: [\n      {\n        id: 1,\n        'subscription-name': 'Covid-19 Special Offers',\n        'monthly-price': <div className=\"text-end\">$0.50</div>,\n        'annual-price': <div className=\"text-end\">$50.00</div>,\n        campaigns: 'Unlimited',\n        trials: true,\n        special: true,\n        status: true,\n      },\n      {\n        id: 2,\n        'subscription-name': 'A.D.I.Y (Do It Yourself)',\n        'monthly-price': <div className=\"text-end\">$0.00</div>,\n        'annual-price': <div className=\"text-end\">$0.50</div>,\n        campaigns: 'Unlimited',\n        trials: true,\n        special: false,\n        status: false,\n      },\n      {\n        id: 3,\n        'subscription-name': 'Free Trial',\n        'monthly-price': <div className=\"text-end\">$0.00</div>,\n        'annual-price': <div className=\"text-end\">$0.00</div>,\n        campaigns: 'Unlimited',\n        trials: true,\n        special: false,\n        status: true,\n      },\n      {\n        id: 4,\n        'subscription-name': 'Guidance',\n        'monthly-price': <div className=\"text-end\">$1.00</div>,\n        'annual-price': <div className=\"text-end\">$100.00</div>,\n        campaigns: 'Unlimited',\n        trials: true,\n        special: false,\n        status: false,\n      },\n      {\n        id: 5,\n        'subscription-name': 'Integration',\n        'monthly-price': <div className=\"text-end\">$0.10</div>,\n        'annual-price': <div className=\"text-end\">$1.00</div>,\n        campaigns: '1',\n        trials: false,\n        special: true,\n        status: true,\n      },\n      {\n        id: 6,\n        'subscription-name': 'Lite Package',\n        'monthly-price': <div className=\"text-end\">$0.00</div>,\n        'annual-price': <div className=\"text-end\">$0.00</div>,\n        campaigns: '10',\n        trials: false,\n        special: true,\n        status: true,\n      },\n      {\n        id: 7,\n        'subscription-name': 'Special Testers',\n        'monthly-price': <div className=\"text-end\">$10.00</div>,\n        'annual-price': <div className=\"text-end\">$100.00</div>,\n        campaigns: 'Unlimited',\n        trials: true,\n        special: false,\n        status: true,\n      },\n    ],\n  }\n\n  return (\n    <CustomTable data={tableData.data} columns={tableData.columns} Header={SubscriptionHeader} />\n  )\n}\n\nexport default SubscriptionManagement\n"],"names":["DialogContent","props","show","visible","setVisible","useState","_jsxs","CModal","onClose","size","children","_jsx","CModalHeader","CModalTitle","style","color","fontSize","CModalBody","CFormLabel","CRow","CCol","CInputGroup","marginBottom","CFormInput","type","id","placeholder","onChange","value","className","min","CFormCheck","label","name","defaultChecked","CModalFooter","CustomButton","onClick","Promise","resolve","el","document","createElement","render","onExit","result","unmountComponentAtNode","cilCheckAlt","cilX","SubscriptionManagement","SubscriptionHeader","React","tableData","columns","selector","sortable","col","obj","trials","CIcon","icon","special","status","FontAwesomeIcon","faBan","EditSubscription","src","EditIcon","TrashIcon","data","campaigns","CustomTable","Header"],"sourceRoot":""}