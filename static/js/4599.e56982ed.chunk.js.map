{"version":3,"file":"static/js/4599.e56982ed.chunk.js","mappings":"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","sources":["views/pages/agency-subscription/index.js","views/pages/subcription-management/components/edit-subscription.js"],"sourcesContent":["import React from 'react'\r\nimport { CustomTable } from 'src/components'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilCheckAlt, cilX } from '@coreui/icons'\r\nimport CustomButton from 'src/components/custombutton'\r\nimport EditSubscription from 'src/views/pages/subcription-management/components/edit-subscription'\r\nimport TrashIcon from 'src/assets/icons/trash.svg'\r\nimport EditIcon from 'src/assets/icons/edit.svg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBan, faSleigh } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst AgencySubscription = () => {\r\n    const SubscriptionHeader = React.lazy(() => import('./components/header'))\r\n    const tableData = {\r\n        columns: [\r\n            {\r\n                name: 'Agency Name',\r\n                selector: 'agency-name',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Subscription Name',\r\n                selector: 'subscription-name',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Total Sales',\r\n                selector: 'total-sales',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: <div className=\"text-center\">Total Profit</div>,\r\n                selector: 'total-profit',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: <div className=\"text-center\">ROI%</div>,\r\n                selector: 'roi',\r\n                sortable: true,\r\n            },\r\n           \r\n            {\r\n                name: <div className=\"text-center\">Status</div>,\r\n                selector: 'status',\r\n                sortable: true,\r\n                render: (col, obj) => {\r\n                    return obj.status ? (\r\n                        <div className=\"text-center\">Active</div>\r\n                    ) : (\r\n                        <div className=\"text-center\">Expired</div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                name: <div className=\"text-center w-100\">Action</div>,\r\n                selector: 'action',\r\n                render: (col) => (\r\n                    <div className=\"d-flex flex-row justify-content-center\">\r\n                        <CustomButton color=\"main\" onClick={() => { }}>\r\n                            <FontAwesomeIcon icon={faBan} size=\"lg\" className=\"mt-1\" />\r\n                        </CustomButton>\r\n                        <CustomButton\r\n                            color=\"main\"\r\n                            onClick={() =>\r\n                                EditSubscription({\r\n                                    show: true,\r\n                                })\r\n                            }\r\n                        >\r\n                            <img src={EditIcon} />\r\n                        </CustomButton>\r\n                        <CustomButton color=\"main\">\r\n                            <img src={TrashIcon} onClick={() => { }} />\r\n                        </CustomButton>\r\n                    </div>\r\n                ),\r\n            },\r\n        ],\r\n        data: [\r\n            {\r\n                id: 1,\r\n                'agency-name': 'Thang Long Agency',\r\n                'subscription-name': 'COVID 19 OFFER',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: false,\r\n            },\r\n            {\r\n                id: 2,\r\n                'agency-name': 'Hoi An Agency',\r\n                'total-sales': '50',\r\n                'subscription-name': 'Independence day',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: false,\r\n            },\r\n            {\r\n                id: 3,\r\n                'agency-name': 'Dong Nai Agency',\r\n                'subscription-name': 'Valentine day',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: true,\r\n            },\r\n            {\r\n                id: 4,\r\n                'agency-name': 'Life Shot Agency',\r\n                'subscription-name': 'International Teacher Day offer',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: true,\r\n            },\r\n            {\r\n                id: 5,\r\n                'agency-name': 'Y.O.U Agency',\r\n                'subscription-name': 'NEW-Trial',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: false,\r\n            },\r\n            {\r\n                id: 6,\r\n                'agency-name': 'Kite Agency',\r\n                'subscription-name': 'PER',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: true,\r\n            },\r\n            {\r\n                id: 7,\r\n                'agency-name': 'PORT Agency',\r\n                'subscription-name': 'WOMAN DAY OFFER',\r\n                'total-sales': '50',\r\n                'total-profit': <div className=\"text-end\">$0.50</div>,\r\n                'roi': <div className=\"text-end\">50.00%</div>,\r\n                status: true,\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <CustomTable data={tableData.data} columns={tableData.columns} Header={SubscriptionHeader}/>\r\n    )\r\n}\r\n\r\nexport default AgencySubscription\r\n","import React, { useState } from 'react'\nimport {\n  CCol,\n  CFormCheck,\n  CFormInput,\n  CFormLabel,\n  CInputGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport CustomButton from '../../../../components/custombutton'\n\nconst EditSubscription = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show } = { ...props }\n  const [visible, setVisible] = useState(show)\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)} size=\"lg\">\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>Edit Subscription</CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{ fontSize: '14px' }}>\n        <CFormLabel style={{ color: '#000000' }}>Required Information</CFormLabel>\n        <CRow>\n          <CCol>\n            <CFormLabel>Subscription Name</CFormLabel>\n            <CInputGroup style={{ marginBottom: '32px' }} size=\"sm\">\n              <CFormInput\n                type=\"text\"\n                id=\"name\"\n                placeholder=\"Input subscription name\"\n                onChange={() => {}}\n                value=\"D.I.Y (Do It Yourself)\"\n              />\n            </CInputGroup>\n\n            <CFormLabel>Monthly Price</CFormLabel>\n            <CInputGroup className=\"mb-3\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"monthly-price\"\n                min=\"0\"\n                placeholder=\"Input monthly price\"\n                onChange={() => {}}\n                value=\"0.50\"\n              />\n            </CInputGroup>\n\n            <CFormCheck\n              id=\"checkMonthly\"\n              className=\"mb-3\"\n              label=\"Disable Monthly\"\n              onChange={() => {}}\n            />\n\n            <CFormCheck\n              id=\"checkAnnually\"\n              className=\"mb-3\"\n              label=\"Disable Annually\"\n              onChange={() => {}}\n            />\n          </CCol>\n          <CCol>\n            <CFormLabel>No. of Campaigns</CFormLabel>\n            <CInputGroup className=\"mb-1\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"no-of-campaigns\"\n                min=\"0\"\n                placeholder=\"Input number of campaigns\"\n                onChange={() => {}}\n                value=\"10\"\n              />\n            </CInputGroup>\n\n            <CFormCheck\n              id=\"checkUnlimited\"\n              className=\"mb-1\"\n              label=\"Unlimited\"\n              onChange={() => {}}\n            />\n\n            <CFormLabel>Annual Price</CFormLabel>\n            <CInputGroup className=\"mb-3\" size=\"sm\">\n              <CFormInput\n                type=\"number\"\n                id=\"annual-price\"\n                min=\"0\"\n                placeholder=\"Input annual price\"\n                onChange={() => {}}\n                value=\"15.00\"\n              />\n            </CInputGroup>\n\n            <CFormCheck id=\"checkTrial\" className=\"mb-3\" label=\"Allow Trial\" onChange={() => {}} />\n\n            <CFormCheck\n              id=\"checkPackage\"\n              className=\"mb-3\"\n              label=\"Allow Special Package\"\n              onChange={() => {}}\n            />\n          </CCol>\n        </CRow>\n        <CRow>\n          <div className=\"d-flex flex-row\">\n            <span className=\"me-4\">Status</span>\n            <CFormCheck\n              type=\"radio\"\n              name=\"checkRadio\"\n              id=\"checkActive\"\n              label=\"Active\"\n              defaultChecked\n              className=\"me-3\"\n              onChange={() => {}}\n            />\n            <CFormCheck\n              type=\"radio\"\n              name=\"checkRadio\"\n              id=\"checkInactive\"\n              label=\"Inactive\"\n              onChange={() => {}}\n            />\n          </div>\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Close\n        </CustomButton>\n        <CustomButton color=\"primary\">Update</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default EditSubscription\n"],"names":["AgencySubscription","SubscriptionHeader","React","tableData","columns","name","selector","sortable","_jsx","className","children","render","col","obj","status","_jsxs","CustomButton","color","onClick","FontAwesomeIcon","icon","faBan","size","EditSubscription","show","src","EditIcon","TrashIcon","data","id","CustomTable","Header","DialogContent","props","visible","setVisible","useState","CModal","onClose","CModalHeader","CModalTitle","style","fontSize","CModalBody","CFormLabel","CRow","CCol","CInputGroup","marginBottom","CFormInput","type","placeholder","onChange","value","min","CFormCheck","label","defaultChecked","CModalFooter","Promise","resolve","el","document","createElement","onExit","result","unmountComponentAtNode"],"sourceRoot":""}