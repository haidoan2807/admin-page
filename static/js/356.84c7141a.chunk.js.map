{"version":3,"file":"static/js/356.84c7141a.chunk.js","mappings":"gQAoBA,MAAMA,GAAqBC,EAAAA,EAAAA,MAgBrBC,EAAiBC,IACrB,MAAM,KAAEC,GAAS,IAAKD,IACfE,EAASC,IAAcC,EAAAA,EAAAA,UAASH,IAChCI,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CACrC,CACEG,MAAO,EACPC,MAAO,WAET,CACED,MAAO,EACPC,MAAO,cAIX,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACR,QAASA,EAASS,QAASA,IAAMR,GAAW,GAAQS,KAAK,KAAIC,SAAA,EACnEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACJ,QAASA,IAAMR,GAAW,GAAOU,UAC7CC,EAAAA,EAAAA,KAACE,EAAAA,GAAW,CAACC,MAAO,CAAEC,MAAO,UAAWC,SAAU,QAASN,SAAC,2BAI9DJ,EAAAA,EAAAA,MAACW,EAAAA,GAAU,CAAAP,SAAA,EACTC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAACJ,MAAO,CAAEC,MAAO,WAAYL,SAAC,0BACzCJ,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAAAT,SAAA,EACHJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,mBACZC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,OAAMZ,UACnBC,EAAAA,EAAAA,KAACY,EAAAA,EAAiB,CAChBC,wBAAwB,EACxBC,WAAY/B,EAEZQ,QAASA,EACTwB,YAAY,qBAIhBf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,mBACZC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,OAAMZ,UACnBC,EAAAA,EAAAA,KAACY,EAAAA,EAAiB,CAChBC,wBAAwB,EACxBC,WAAY/B,EAEZQ,QAASA,EACTwB,YAAY,qBAIhBf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,yBACZC,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAACL,UAAU,OAAMZ,UAC3BC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,KAAK,SACLC,GAAG,SACHC,IAAI,IACJC,SAAUA,OACVN,YAAY,8BAKlBpB,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,gBACZC,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAACL,UAAU,OAAMZ,UAC3BC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,YAAYE,SAAUA,OAAUN,YAAY,kBAEzEf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,iBACZJ,EAAAA,EAAAA,MAACqB,EAAAA,GAAW,CAACL,UAAU,OAAMZ,SAAA,EAC3BC,EAAAA,EAAAA,KAACsB,EAAAA,GAAe,CAAAvB,SAAC,OACjBC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,KAAK,SACLE,IAAI,IACJD,GAAG,YACHE,SAAUA,OACVN,YAAY,oBAGhBf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,WACZC,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAACL,UAAU,OAAMZ,UAC3BC,EAAAA,EAAAA,KAACuB,EAAAA,GAAa,CACZJ,GAAG,OACHK,KAAK,IACLH,SAAUA,OACVN,YAAY,sBAMtBpB,EAAAA,EAAAA,MAAC8B,EAAAA,GAAY,CAAA1B,SAAA,EACXC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,YAAYuB,QAASA,IAAMtC,GAAW,GAAOU,SAAC,YAGlEC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,QAAOL,SAAC,oBAC5BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,UAASL,SAAC,qBAEzB,EAIb,IAhHwBb,GACf,IAAI0C,SAASC,IAClB,IAAIC,EAAKC,SAASC,cAAc,QAQhCC,EAAAA,EAAAA,SAAOjC,EAAAA,EAAAA,KAACf,EAAa,IAAKC,EAAOgD,OANVC,KACrBC,EAAAA,EAAAA,wBAAuBN,GACvBA,EAAK,KACLD,EAAQM,EAAO,IAG2CL,EAAG,G,qOCXnE,MAAMO,EAAaC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kJAGP,WA+JtB,I,IAAA,EAzJoBC,KAClB,MAQMC,EAAY,CAChBC,QAAS,CACP,CACEC,KAAM,YACNC,SAAU,WACVC,UAAU,GAEZ,CACEF,KAAM,gBACNC,SAAU,OACVC,UAAU,GAEZ,CACEF,KAAM,WACNC,SAAU,UACVC,UAAU,GAEZ,CACEF,KAAM,YACNC,SAAU,WACVC,UAAU,GAEZ,CACEF,KAAM,aACNC,SAAU,YACVC,UAAU,GAEZ,CACEF,KAAM,mBACNC,SAAU,iBACVC,UAAU,GAEZ,CACEF,MAAM7C,EAAAA,EAAAA,KAAA,OAAKW,UAAU,oBAAmBZ,SAAC,WACzC+C,SAAU,SACVb,OAAQA,CAACe,EAAKC,KACZtD,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,yCAAwCZ,SAAA,EACrDC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,OAAOuB,QAASA,KAAesB,EAAI9B,QA5C/D+B,EAAAA,EAAAA,GAAW,CAAE/D,MAAM,EAAMgE,SAAS,KA4CiCpD,UACzDC,EAAAA,EAAAA,KAAA,OAAKoD,IAAKC,EAAAA,OAEZrD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,OAAOuB,QAASA,KAAesB,EAAI9B,QA3C/D+B,EAAAA,EAAAA,GAAW,CAAE/D,MAAM,KA2CgDY,UACzDC,EAAAA,EAAAA,KAAA,OAAKoD,IAAKE,EAAAA,OAEZtD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CACXtB,MAAM,OACNuB,QAASA,KACP4B,EAAAA,EAAAA,GAAc,CACZpE,MAAM,EACNqE,SAAS7D,EAAAA,EAAAA,MAAA,QAAAI,SAAA,CAAM,wCAAsCkD,EAAIJ,KAAK,OAC9DY,MAAO,iBACPC,YAAa,WAEhB3D,UAEDC,EAAAA,EAAAA,KAAA,OAAKoD,IAAKO,EAAAA,WAMpBC,KAAM,CACJ,CACEzC,GAAI,EACJ0C,SAAU,WACVhB,KAAM,QACNiB,QAAS,cACTC,SAAU,cACVC,UAAW,UACXC,eAAgB,aAKtB,OACEtE,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,2BAA0BZ,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,gCAAgCR,MAAO,CAAE+D,QAAS,UAAWnE,UAC1EJ,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAAAT,SAAA,EACHC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,EAAEX,UACVJ,EAAAA,EAAAA,MAACwE,EAAAA,GAAK,CAAApE,SAAA,EACJJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,OAAMZ,SAAA,EACnBC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,mBACZC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,eAAe1B,MAAM,kBAElDE,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,OAAMZ,SAAA,EACnBC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,mBACZC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,eAAe1B,MAAM,qBAElDE,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAAAT,SAAA,EACHC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,EAAEX,UACVJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,OAAMZ,SAAA,EACnBC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,gBACZC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,oBAG/BnB,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,EAAEX,UACVJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,OAAMZ,SAAA,EACnBC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,cACZC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,qBAIjCxB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,OAAMZ,SAAA,EACnBC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,0BACZC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,KAAK,OAAOC,GAAG,eAAe1B,MAAM,6BAItDE,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACG,UAAU,OAAMZ,SAAA,EACpBJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,iBACZC,EAAAA,EAAAA,KAACqC,EAAU,CAAAtC,SAAC,oBAEdJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACY,EAAAA,GAAU,CAAAR,SAAA,EACTC,EAAAA,EAAAA,KAACoE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MAAY,eAErCtE,EAAAA,EAAAA,KAACqC,EAAU,CAAAtC,SAAC,gBAEdJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACY,EAAAA,GAAU,CAAAR,SAAA,EACTC,EAAAA,EAAAA,KAACoE,EAAAA,EAAe,CAACC,KAAME,EAAAA,MAAa,gBAEtCvE,EAAAA,EAAAA,KAACqC,EAAU,CAAAtC,SAAC,oBAGhBJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,GAAGX,SAAA,EACXC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,WACZC,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,CAAAjB,UACVC,EAAAA,EAAAA,KAACuB,EAAAA,GAAa,CAACJ,GAAG,OAAOK,KAAK,IAAIH,SAAUA,uBAOtDrB,EAAAA,EAAAA,KAAA,KAAGW,UAAU,eAAeR,MAAO,CAAEqE,YAAa,QAASzE,SAAC,kBAG5DC,EAAAA,EAAAA,KAACyE,EAAAA,GAAW,CAACb,KAAMjB,EAAUiB,KAAMhB,QAASD,EAAUC,YAClD,EC9KV,MAAM8B,EAAcpC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uGAIR,WAGhBkC,EAAOrC,EAAAA,GAAOC,IAAGqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,kIAMXvD,GAAWA,EAAM2F,OAAS,UAAY,YAuHlD,I,IAAA,EApHuBC,KACrB,MAAMnC,EAAY,CAChBC,QAAS,CACP,CACEC,KAAM,OACNC,SAAU,OACVC,UAAU,GAEZ,CACEF,KAAM,YACNC,SAAU,YACVC,UAAU,GAEZ,CACEF,KAAM,cACNC,SAAU,aACVC,UAAU,GAEZ,CACEF,KAAM,gBACNC,SAAU,eACVC,UAAU,GAEZ,CACEF,KAAM,mBACNC,SAAU,iBACVC,UAAU,GAEZ,CACEF,KAAM,oBACNC,SAAU,kBACVC,UAAU,GAEZ,CACEF,KAAM,sBACNC,SAAU,oBACVC,UAAU,IAGda,KAAM,CACJ,CACEmB,KAAM,cACNC,UAAW,EACXC,WAAY,OACZC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,SAErB,CACEN,KAAM,cACNC,UAAW,EACXC,WAAY,OACZC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,WAKzB,OACE1F,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,2BAA0BZ,SAAA,EACvCC,EAAAA,EAAAA,KAAC0E,EAAW,CAAC/D,UAAU,iBAAgBZ,UACrCJ,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAAAT,SAAA,EACHJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,iBACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAELJ,EAAAA,EAAAA,MAACgF,EAAI,CAACE,QAAM,EAAA9E,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,gBACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBAGPJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,YACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAELJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,WACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBAGPJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,qBACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,UAELJ,EAAAA,EAAAA,MAACgF,EAAI,CAACE,QAAM,EAAA9E,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,+BACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAGPJ,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,GAAI,EAAEX,SAAA,EACVJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,iCACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAELJ,EAAAA,EAAAA,MAACgF,EAAI,CAAA5E,SAAA,EACHC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAAAR,SAAC,gCACZC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAMXC,EAAAA,EAAAA,KAAA,KAAGW,UAAU,eAAeR,MAAO,CAAEqE,YAAa,QAASzE,SAAC,6BAG5DC,EAAAA,EAAAA,KAACyE,EAAAA,GAAW,CAACb,KAAMjB,EAAUiB,KAAMhB,QAASD,EAAUC,YAClD,E,sBChHV,MAAM0C,GAAYhD,EAAAA,EAAAA,IAAOiD,EAAAA,GAAPjD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uJAUxB+C,EAAclD,EAAAA,GAAOC,IAAGqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,iEAgF9B,MA1EuBgD,KACrB,MAAOC,EAAWC,IAAgBrG,EAAAA,EAAAA,UAAS,eAErCsG,EAAUC,IACVH,IAAcG,GAAKF,EAAaE,EAAI,EAG1C,OACElG,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,oCAAmCZ,SAAA,EAChDJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,+CAA+CR,MAAO,CAAE+D,QAAS,UAAWnE,SAAA,EACzFJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,2CAA0CZ,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,KAAIZ,SAAC,WACpBC,EAAAA,EAAAA,KAAC8F,EAAAA,GAAM,CAAC1F,MAAM,UAASL,SAAC,eAE1BJ,EAAAA,EAAAA,MAAC6F,EAAW,CAAAzF,SAAA,EACVC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAACtB,MAAM,UAASL,SAAC,YAC9BJ,EAAAA,EAAAA,MAAC+B,EAAAA,EAAY,CAACtB,MAAM,UAAUuB,QAASA,KAAMoE,EAAAA,EAAAA,GAAe,CAAE5G,MAAM,IAAQY,SAAA,EAC1EC,EAAAA,EAAAA,KAACoE,EAAAA,EAAe,CAACC,KAAM2B,EAAAA,MAAY,uBAErCrG,EAAAA,EAAAA,MAAC+B,EAAAA,EAAY,CAACtB,MAAM,UAAUuB,QAASA,KAAMsE,EAAAA,EAAAA,GAAc,CAAE9G,MAAM,IAAQY,SAAA,EACzEC,EAAAA,EAAAA,KAACoE,EAAAA,EAAe,CAACC,KAAM2B,EAAAA,MAAY,oBAErCrG,EAAAA,EAAAA,MAACuG,EAAAA,GAAY,CAACC,KAAK,QAAQ/F,MAAM,UAASL,SAAA,EACxCJ,EAAAA,EAAAA,MAAC+B,EAAAA,EAAY,CAACtB,MAAM,UAASL,SAAA,EAC3BC,EAAAA,EAAAA,KAACoE,EAAAA,EAAe,CAACC,KAAM+B,EAAAA,MAAU,mBAEnCzG,EAAAA,EAAAA,MAAC0G,EAAAA,GAAS,CAACC,QAAQ,YAAWvG,SAAA,EAC5BC,EAAAA,EAAAA,KAACuG,EAAAA,GAAe,CAACpG,MAAO,CAAEqG,gBAAiB,cAC3CxG,EAAAA,EAAAA,KAACyG,EAAAA,GAAa,CAAA1G,UACZC,EAAAA,EAAAA,KAAC0G,EAAAA,GAAa,CAAC/E,QAASA,OAAS5B,SAAC,gCAO5CC,EAAAA,EAAAA,KAACsF,EAAS,CAACgB,QAAQ,OAAOH,KAAK,UAAUxF,UAAU,wBAAuBZ,UACxEJ,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,qCAAoCZ,SAAA,EACjDC,EAAAA,EAAAA,KAAC2G,EAAAA,GAAQ,CAAA5G,UACPC,EAAAA,EAAAA,KAAC4G,EAAAA,GAAQ,CACPC,OAAsB,gBAAdnB,EACRvF,MAAO,CAAE2G,OAAQ,WACjBnF,QAASA,IAAMiE,EAAO,eACtBjF,UAAS,YAAAoG,OACO,gBAAdrB,EACI,4CACA,4CACH3F,SACJ,mBAIHC,EAAAA,EAAAA,KAAC2G,EAAAA,GAAQ,CAAA5G,UACPC,EAAAA,EAAAA,KAAC4G,EAAAA,GAAQ,CACPC,OAAsB,mBAAdnB,EACRvF,MAAO,CAAE2G,OAAQ,WACjBnF,QAASA,IAAMiE,EAAO,kBACtBjF,UAAS,YAAAoG,OACO,mBAAdrB,EACI,4CACA,4CACH3F,SACJ,2BAOQ,gBAAd2F,GAA8B1F,EAAAA,EAAAA,KAAC0C,EAAW,KAAM1C,EAAAA,EAAAA,KAAC8E,EAAc,MAC5D,C","sources":["views/pages/campaign/components/add-sales-value.js","views/pages/campaign/detail-campaign/information/index.js","views/pages/campaign/detail-campaign/campaign-result/index.js","views/pages/campaign/detail-campaign/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CInputGroup,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport CustomButton from '../../../../components/custombutton'\nimport makeAnimated from 'react-select/animated'\nimport CustomSelectInput from 'src/components/customselectinput'\n\nconst animatedComponents = makeAnimated()\n\nconst CreateNewSales = (props) => {\n  return new Promise((resolve) => {\n    let el = document.createElement('div')\n\n    const handleResolve = (result) => {\n      unmountComponentAtNode(el)\n      el = null\n      resolve(result)\n    }\n\n    render(<DialogContent {...props} onExit={handleResolve} />, el)\n  })\n}\n\nconst DialogContent = (props) => {\n  const { show } = { ...props }\n  const [visible, setVisible] = useState(show)\n  const [options, setOptions] = useState([\n    {\n      value: 0,\n      label: 'Vietnam',\n    },\n    {\n      value: 1,\n      label: 'Thailand',\n    },\n  ])\n\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)} size=\"lg\">\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle style={{ color: '#000000', fontSize: '18px' }}>\n          Add New Sales Value\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CFormLabel style={{ color: '#000000' }}>Required Information</CFormLabel>\n        <CRow>\n          <CCol md={6}>\n            <CFormLabel>Campaign Name</CFormLabel>\n            <div className=\"mb-3\">\n              <CustomSelectInput\n                InputcloseMenuOnSelect={true}\n                components={animatedComponents}\n                // defaultValue={options}\n                options={options}\n                placeholder=\"Campaign Name\"\n              />\n            </div>\n\n            <CFormLabel>Campaign Type</CFormLabel>\n            <div className=\"mb-3\">\n              <CustomSelectInput\n                InputcloseMenuOnSelect={true}\n                components={animatedComponents}\n                // defaultValue={options}\n                options={options}\n                placeholder=\"Campaign Type\"\n              />\n            </div>\n\n            <CFormLabel>Number of customers</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CFormInput\n                type=\"number\"\n                id=\"number\"\n                min=\"0\"\n                onChange={() => {}}\n                placeholder=\"Number of customers\"\n              />\n            </CInputGroup>\n          </CCol>\n\n          <CCol md={6}>\n            <CFormLabel>Sales Date</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CFormInput type=\"date\" id=\"sale-date\" onChange={() => {}} placeholder=\"Sales date\" />\n            </CInputGroup>\n            <CFormLabel>Sales Value</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>$</CInputGroupText>\n              <CFormInput\n                type=\"number\"\n                min=\"0\"\n                id=\"sale-date\"\n                onChange={() => {}}\n                placeholder=\"Sales value\"\n              />\n            </CInputGroup>\n            <CFormLabel>Notes</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CFormTextarea\n                id=\"note\"\n                rows=\"1\"\n                onChange={() => {}}\n                placeholder=\"Notes\"\n              ></CFormTextarea>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CustomButton color=\"secondary\" onClick={() => setVisible(false)}>\n          Cancel\n        </CustomButton>\n        <CustomButton color=\"light\">Add & Continue</CustomButton>\n        <CustomButton color=\"primary\">Add & Close</CustomButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default CreateNewSales\n","import React from 'react'\nimport { CustomTable } from 'src/components'\nimport CustomButton from 'src/components/custombutton'\nimport ConfirmDialog from 'src/components/popup'\nimport TrashIcon from 'src/assets/icons/trash.svg'\nimport EditIcon from 'src/assets/icons/edit.svg'\nimport DetailIcon from 'src/assets/icons/detail.svg'\nimport {\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CInputGroup,\n  CRow,\n} from '@coreui/react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBarcode, faQrcode } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components'\nimport UpdateCost from '../../components/view-or-update-cost'\n\nconst BarCodeBox = styled.div`\n  display: flex;\n  height: 118px;\n  border: 1px solid ${'#e5e7eb'};\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nconst Information = () => {\n  const viewCost = () => {\n    UpdateCost({ show: true, disable: true })\n  }\n\n  const editCost = () => {\n    UpdateCost({ show: true })\n  }\n\n  const tableData = {\n    columns: [\n      {\n        name: 'Cost Type',\n        selector: 'costType',\n        sortable: true,\n      },\n      {\n        name: 'Campaign Name',\n        selector: 'name',\n        sortable: true,\n      },\n      {\n        name: 'Start On',\n        selector: 'startOn',\n        sortable: true,\n      },\n      {\n        name: 'Start End',\n        selector: 'startEnd',\n        sortable: true,\n      },\n      {\n        name: 'Cost Value',\n        selector: 'costValue',\n        sortable: true,\n      },\n      {\n        name: 'Total Cost Value',\n        selector: 'totalCostValue',\n        sortable: true,\n      },\n      {\n        name: <div className=\"text-center w-100\">Action</div>,\n        selector: 'action',\n        render: (col, obj) => (\n          <div className=\"d-flex flex-row justify-content-center\">\n            <CustomButton color=\"main\" onClick={() => viewCost(obj.id)}>\n              <img src={DetailIcon} />\n            </CustomButton>\n            <CustomButton color=\"main\" onClick={() => editCost(obj.id)}>\n              <img src={EditIcon} />\n            </CustomButton>\n            <CustomButton\n              color=\"main\"\n              onClick={() =>\n                ConfirmDialog({\n                  show: true,\n                  message: <span>Do you want to delete this campaign: {obj.name}?</span>,\n                  title: 'Confirm delete',\n                  confirmText: 'Delete',\n                })\n              }\n            >\n              <img src={TrashIcon} />\n            </CustomButton>\n          </div>\n        ),\n      },\n    ],\n    data: [\n      {\n        id: 2,\n        costType: 'One Time',\n        name: 'HUPER',\n        startOn: 'Mar 19 2022',\n        startEnd: 'Mar 20 2022',\n        costValue: '$100.00',\n        totalCostValue: '$100.00',\n      },\n    ],\n  }\n\n  return (\n    <div className=\"d-flex flex-column w-100\">\n      <div className=\"d-flex flex-column w-100 my-3\" style={{ padding: '0 12px' }}>\n        <CRow>\n          <CCol md={5}>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormLabel>Campaign Name</CFormLabel>\n                <CFormInput type=\"text\" id=\"campaignName\" value=\"HUPER 8.3\" />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel>Campaign Type</CFormLabel>\n                <CFormInput type=\"text\" id=\"campaignType\" value=\"10% discount\" />\n              </div>\n              <CRow>\n                <CCol md={6}>\n                  <div className=\"mb-3\">\n                    <CFormLabel>Start Date</CFormLabel>\n                    <CFormInput type=\"date\" id=\"startDate\" />\n                  </div>\n                </CCol>\n                <CCol md={6}>\n                  <div className=\"mb-3\">\n                    <CFormLabel>End Date</CFormLabel>\n                    <CFormInput type=\"date\" id=\"endDate\" />\n                  </div>\n                </CCol>\n              </CRow>\n              <div className=\"mb-3\">\n                <CFormLabel>Duration of Campaign</CFormLabel>\n                <CFormInput type=\"text\" id=\"campaignType\" value=\"47 weeks 6 days\" />\n              </div>\n            </CForm>\n          </CCol>\n          <CCol md={7}>\n            <CRow className=\"mb-2\">\n              <CCol md={4}>\n                <CFormLabel>Campaign ID</CFormLabel>\n                <BarCodeBox>CAMPAIGN ID</BarCodeBox>\n              </CCol>\n              <CCol md={4}>\n                <CFormLabel>\n                  <FontAwesomeIcon icon={faQrcode} /> QR Code\n                </CFormLabel>\n                <BarCodeBox>QR CODE</BarCodeBox>\n              </CCol>\n              <CCol md={4}>\n                <CFormLabel>\n                  <FontAwesomeIcon icon={faBarcode} /> Bar Code\n                </CFormLabel>\n                <BarCodeBox>BAR CODE</BarCodeBox>\n              </CCol>\n            </CRow>\n            <CCol md={12}>\n              <CFormLabel>Notes</CFormLabel>\n              <CInputGroup>\n                <CFormTextarea id=\"note\" rows=\"5\" onChange={() => {}}></CFormTextarea>\n              </CInputGroup>\n            </CCol>\n          </CCol>\n        </CRow>\n      </div>\n\n      <p className=\"fw-bold mb-0\" style={{ paddingLeft: '12px' }}>\n        List of Cost\n      </p>\n      <CustomTable data={tableData.data} columns={tableData.columns} />\n    </div>\n  )\n}\n\nexport default Information\n","import React from 'react'\nimport { CustomTable } from 'src/components'\nimport { CCol, CRow, CFormLabel } from '@coreui/react'\nimport styled from 'styled-components'\n\nconst SummaryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  border: 2px solid ${'#2B5A92'};\n`\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 20px 0;\n  color: ${(props) => (props.danger ? '#DC3545' : '#2B5A92')};\n`\n\nconst CampaignResult = () => {\n  const tableData = {\n    columns: [\n      {\n        name: 'Date',\n        selector: 'date',\n        sortable: true,\n      },\n      {\n        name: 'Customers',\n        selector: 'customers',\n        sortable: true,\n      },\n      {\n        name: 'Total Sales',\n        selector: 'totalSales',\n        sortable: true,\n      },\n      {\n        name: 'Average Spend',\n        selector: 'averageSpend',\n        sortable: true,\n      },\n      {\n        name: 'Cost of Campaign',\n        selector: 'costOfCampaign',\n        sortable: true,\n      },\n      {\n        name: 'Cost per customer',\n        selector: 'costPerCustomer',\n        sortable: true,\n      },\n      {\n        name: 'Profit per customer',\n        selector: 'profitPerCustomer',\n        sortable: true,\n      },\n    ],\n    data: [\n      {\n        date: 'Mar 19 2022',\n        customers: 2,\n        totalSales: '$4.5',\n        averageSpend: '$2.25',\n        costOfCampaign: '$0.00',\n        costPerCustomer: '$0.00',\n        profitPerCustomer: '$2.25',\n      },\n      {\n        date: 'Mar 19 2022',\n        customers: 2,\n        totalSales: '$4.5',\n        averageSpend: '$2.25',\n        costOfCampaign: '$0.00',\n        costPerCustomer: '$0.00',\n        profitPerCustomer: '$2.25',\n      },\n    ],\n  }\n\n  return (\n    <div className=\"d-flex flex-column w-100\">\n      <SummaryList className=\"container my-3\">\n        <CRow>\n          <CCol md={2}>\n            <Card>\n              <CFormLabel>TOTAL SALES</CFormLabel>\n              <p>$44.55</p>\n            </Card>\n            <Card danger>\n              <CFormLabel>TOTAL COST</CFormLabel>\n              <p>$100.00</p>\n            </Card>\n          </CCol>\n          <CCol md={2}>\n            <Card>\n              <CFormLabel>PROFIT</CFormLabel>\n              <p>-$55.45</p>\n            </Card>\n            <Card>\n              <CFormLabel>% ROI</CFormLabel>\n              <p>-$55.45</p>\n            </Card>\n          </CCol>\n          <CCol md={4}>\n            <Card>\n              <CFormLabel>TOTAL CUSTOMERS</CFormLabel>\n              <p>8</p>\n            </Card>\n            <Card danger>\n              <CFormLabel>AVERAGE COST per CUSTOMER</CFormLabel>\n              <p>$12.50</p>\n            </Card>\n          </CCol>\n          <CCol md={4}>\n            <Card>\n              <CFormLabel>AVERAGE PROFIT per CUSTOMER</CFormLabel>\n              <p>-$6.93</p>\n            </Card>\n            <Card>\n              <CFormLabel>AVERAGE SPEND per CUSTOMER</CFormLabel>\n              <p>$5.57</p>\n            </Card>\n          </CCol>\n        </CRow>\n      </SummaryList>\n\n      <p className=\"fw-bold mb-0\" style={{ paddingLeft: '12px' }}>\n        Campaign Result Details\n      </p>\n      <CustomTable data={tableData.data} columns={tableData.columns} />\n    </div>\n  )\n}\n\nexport default CampaignResult\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport CustomButton from 'src/components/custombutton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDollar, faPlug } from '@fortawesome/free-solid-svg-icons'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CButtonGroup,\n  CNav,\n  CNavItem,\n  CNavLink,\n} from '@coreui/react'\nimport Information from './information'\nimport CampaignResult from './campaign-result'\nimport CreateNewSales from '../components/add-sales-value'\nimport CreateNewCost from '../components/add-new-cost'\n\nconst CustomNav = styled(CNav)`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n\n  @media only screen and (max-width: 576px) {\n    flex-direction: column;\n  }\n`\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n`\n\nconst DetailCampaign = () => {\n  const [activeTab, setActiveTab] = useState('information')\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab)\n  }\n\n  return (\n    <div className=\"d-flex flex-column w-100 bg-white\">\n      <div className=\"d-flex flex-row justify-content-between my-3\" style={{ padding: '0 12px' }}>\n        <div className=\"d-flex flex-row align-items-center gap-2\">\n          <div className=\"h5\">HUPER</div>\n          <CBadge color=\"success\">Active</CBadge>\n        </div>\n        <ButtonGroup>\n          <CustomButton color=\"primary\">Update</CustomButton>\n          <CustomButton color=\"primary\" onClick={() => CreateNewSales({ show: true })}>\n            <FontAwesomeIcon icon={faDollar} /> Add Sales Value\n          </CustomButton>\n          <CustomButton color=\"primary\" onClick={() => CreateNewCost({ show: true })}>\n            <FontAwesomeIcon icon={faDollar} /> Add New Cost\n          </CustomButton>\n          <CButtonGroup role=\"group\" color=\"primary\">\n            <CustomButton color=\"primary\">\n              <FontAwesomeIcon icon={faPlug} /> Connect POS\n            </CustomButton>\n            <CDropdown variant=\"btn-group\">\n              <CDropdownToggle style={{ backgroundColor: '#1A428A' }}></CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem onClick={() => {}}>Download now</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          </CButtonGroup>\n        </ButtonGroup>\n      </div>\n\n      <CustomNav variant=\"tabs\" role=\"tablist\" className=\"border-secondary my-2\">\n        <div className=\"d-flex flex-row align-items-center\">\n          <CNavItem>\n            <CNavLink\n              active={activeTab === 'information'}\n              style={{ cursor: 'pointer' }}\n              onClick={() => toggle('information')}\n              className={`border-0 ${\n                activeTab === 'information'\n                  ? 'text-primary border-bottom border-primary'\n                  : 'text-dark border-bottom border-secondary'\n              }`}\n            >\n              Information\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink\n              active={activeTab === 'campaignResult'}\n              style={{ cursor: 'pointer' }}\n              onClick={() => toggle('campaignResult')}\n              className={`border-0 ${\n                activeTab === 'campaignResult'\n                  ? 'text-primary border-bottom border-primary'\n                  : 'text-dark border-bottom border-secondary'\n              }`}\n            >\n              Campaign Result\n            </CNavLink>\n          </CNavItem>\n        </div>\n      </CustomNav>\n\n      {activeTab === 'information' ? <Information /> : <CampaignResult />}\n    </div>\n  )\n}\n\nexport default DetailCampaign\n"],"names":["animatedComponents","makeAnimated","DialogContent","props","show","visible","setVisible","useState","options","setOptions","value","label","_jsxs","CModal","onClose","size","children","_jsx","CModalHeader","CModalTitle","style","color","fontSize","CModalBody","CFormLabel","CRow","CCol","md","className","CustomSelectInput","InputcloseMenuOnSelect","components","placeholder","CInputGroup","CFormInput","type","id","min","onChange","CInputGroupText","CFormTextarea","rows","CModalFooter","CustomButton","onClick","Promise","resolve","el","document","createElement","render","onExit","result","unmountComponentAtNode","BarCodeBox","styled","div","_templateObject","_taggedTemplateLiteral","Information","tableData","columns","name","selector","sortable","col","obj","UpdateCost","disable","src","DetailIcon","EditIcon","ConfirmDialog","message","title","confirmText","TrashIcon","data","costType","startOn","startEnd","costValue","totalCostValue","padding","CForm","FontAwesomeIcon","icon","faQrcode","faBarcode","paddingLeft","CustomTable","SummaryList","Card","_templateObject2","danger","CampaignResult","date","customers","totalSales","averageSpend","costOfCampaign","costPerCustomer","profitPerCustomer","CustomNav","CNav","ButtonGroup","DetailCampaign","activeTab","setActiveTab","toggle","tab","CBadge","CreateNewSales","faDollar","CreateNewCost","CButtonGroup","role","faPlug","CDropdown","variant","CDropdownToggle","backgroundColor","CDropdownMenu","CDropdownItem","CNavItem","CNavLink","active","cursor","concat"],"sourceRoot":""}